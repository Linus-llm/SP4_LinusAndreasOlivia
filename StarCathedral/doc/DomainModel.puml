@startuml
!pragma layout smetana
'https://plantuml.com/class-diagram

class LogIn {
#username
#password
#tsk
login()
}
class Riddle{
-String description
-ArrayList answerOptions
#void processAnswer()
#getRiddle()
}

class Quest{
-String questName
-String questDescription
#void startQuest()
}

class Timer{
#showTime()
}
class Game{
+Game()
#startGame()
#goCommand()
-parseCommand()
#goDirection()
#getCurrentRoom()
}
class Player{
-String name
-int health
-ArrayList inventory
+Player()
#void getItem()
#void dropItem()
+boolean move()
+Room getCurrentRoom()
+void setCurrentRoom()
+List<Item> getInventory()
+String getName()

}


class Inventory
class Map {
-ArrayList mapRoomList
-ArrayList mapRoomList
-ArrayList mapRoomList
-Room startRoom
#void rotateRooms()
#buildMap()
#getStartRoom()

}
class Room {
-Room forwardRoom
-Room backwardsRoom
-Room upRoom
-Room downRoom
-String roomName
-String roomDescription
-ArrayList items
#setForwardRoom()
#setBackwardsRoom()
#setUpRoom()
#setDownRoom()
#getForwardRoom()
#getBackwardsRoom()
#getUpRoom()
#getDownRoom()
#getItem()
#addItem()
+removeItem()
+findItem()


}
interface Creature {
-String creatureName
-String creatureDescription
-String creatureMsg
-int creatureDmgNum
-int creatureHealth
#void monsterReward()
#boolean ifPlayerFriendly()
#boolean ifPlayerHostile()

}
class Friend {
}
class Neutral
class Hostile
abstract class Item{
-String itemName
-String itemDescription
# String getItemName()
#String getItemDescription()
#void monsterReward()
}
class Gear {
- int dmgReductionNum
- int damage
# double dmgReductionCalc()
}
class QuestItem {
#boolean isQuestComplete()
}
class Consumables{
-int healingStrength
# int healingCalc()

}


Timer*--Game
LogIn*--Game
Game*--Player
Player*--Inventory
Game*--Map
Room*--Map
Room*--Item
Room*--Creature
Room*-- Riddle
Creature<--Friend
Creature<--Neutral
Creature<--Hostile
Creature *-- Quest
Item<--Gear
Item<--Consumables
Item<--QuestItem




@enduml